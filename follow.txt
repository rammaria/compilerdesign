<iden>	$, lt, gt, le, ge, eq, !=, *, +, %, /, /f, ^, -, <comma>, <end_symbol>, <assignment_sym>, <start_method>, <open_parent>, <if>, <repeat>, <until>, int, float, string, character, boolean, <then>
<program>	
<declaration>	<end_symbol>, <until>
<datatype>	<end_symbol>, <comma>, int, float, string, character, boolean, [a-z0-9], <assignment_sym>
<numeric_type>	<end_symbol>, <comma>, int, float, string, character, boolean, [a-z0-9], <assignment_sym>
<non_numeric_type>	<end_symbol>, <comma>, int, float, string, character, boolean, [a-z0-9], <assignment_sym>
<stmt>	<end_symbol>, <until>
<if_stmt>	<end_symbol>, <until>
<while_stmt>	<end_symbol>, <until>
<repeatuntil_stmt>	<end_symbol>, <until>
<until_stmt>	<end_symbol>, <until>
<repeat_stmt>	<end_symbol>, <until>
<assignment_stmt>	<end_symbol>, <until>
<input>	
<output>	
<string_expr>	<end_symbol>
<stmt_list>	<end_method>
<var_list>	<end_symbol>
<math_expr>	<end_symbol>
<numeric_value>	lt, gt, le, ge, eq, !=, *, +, %, /, /f, ^, -, <end_symbol>, <if>, <repeat>, <until>, int, float, string, character, boolean, <then>
<operator>	[a-z0-9], [0-9]*, *, +, %, /, /f, ^, -, <end_symbol>
<multiplication>	[a-z0-9], [0-9]*, *, +, %, /, /f, ^, -, <end_symbol>
<division>	[a-z0-9], [0-9]*, *, +, %, /, /f, ^, -, <end_symbol>
<addition>	[a-z0-9], [0-9]*, *, +, %, /, /f, ^, -, <end_symbol>
<subtraction>	[a-z0-9], [0-9]*, *, +, %, /, /f, ^, -, <end_symbol>
<modulo>	[a-z0-9], [0-9]*, *, +, %, /, /f, ^, -, <end_symbol>
<power>	[a-z0-9], [0-9]*, *, +, %, /, /f, ^, -, <end_symbol>
<condition>	<if>, <repeat>, <until>, int, float, string, character, boolean, <then>, <end_symbol>
<rel_expr>	<if>, <repeat>, <until>, int, float, string, character, boolean, <then>, <end_symbol>
<relational_op>	[a-z0-9], [0-9]*, <if>, <repeat>, <until>, int, float, string, character, boolean, <then>, <end_symbol>