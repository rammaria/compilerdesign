[a-z0-9]	[a-z0-9]
ε	ε
<start_program>	<start_program>
<start_method>	<start_method>
<open_parent>	<open_parent>
<close_parent>	<close_parent>
<end_method>	<end_method>
<end_program>	<end_program>
<end_symbol>	<end_symbol>
int	int
float	float
string	string
character	character
boolean	boolean
<if>	<if>
<then>	<then>
<boolean_expr>	<boolean_expr>
<until>	<until>
<repeat>	<repeat>
<assignment_sym>	<assignment_sym>
<value>	<value>
<input_symbol>	<input_symbol>
<print>	<print>
<string_value>	<string_value>
<comma>	<comma>
[0-9]*	[0-9]*
*	*
/	/
/f	/f
+	+
-	-
%	%
^	^
lt	lt
gt	gt
le	le
ge	ge
eq	eq
!=	!=
<iden>	[a-z0-9], ε
<program>	<start_program>
<numeric_type>	int, float
<non_numeric_type>	string, character, boolean
<stmt>	ε, <if>, <repeat>, <until>, int, float, string, character, boolean
<if_stmt>	<if>
<while_stmt>	<until>
<repeatuntil_stmt>	<repeat>
<until_stmt>	<until>
<repeat_stmt>	<repeat>
<input>	<input_symbol>
<output>	<print>
<string_expr>	<open_parent>
<stmt_list>	<end_symbol>, ε, <if>, <repeat>, <until>, int, float, string, character, boolean
<var_list>	<comma>, int, float, string, character, boolean, [a-z0-9], ε
<numeric_value>	[0-9]*, ε
<multiplication>	*
<division>	/, /f
<addition>	+
<subtraction>	-
<modulo>	%
<power>	^
<relational_op>	lt, gt, le, ge, eq, !=
<datatype>	int, float, string, character, boolean
<math_expr>	[a-z0-9], ε, [0-9]*, *, +, %, /, /f, ^, -
<operator>	*, +, %, /, /f, ^, -
<rel_expr>	[a-z0-9], ε, [0-9]*, lt, gt, le, ge, eq, !=
<declaration>	int, float, string, character, boolean
<assignment_stmt>	int, float, string, character, boolean
<condition>	[a-z0-9], ε, [0-9]*, lt, gt, le, ge, eq, !=